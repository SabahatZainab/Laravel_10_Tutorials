types of joins
1- join() ->inner join
2- leftJoin() -> left join
3- rightJoin() -> right join
4- crossJoin() ->cross join

Joins
--------------------------left joins example queries-----------------------------
// $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->where('students.email','=','student10@gmail.com')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->where('students.name','like','s%')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->where('cities.city_name','=','City1')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->count();

        // $students = DB::table('students')
        //                 ->select('students.*','cities.city_name')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->where('cities.city_name','=','City1')
        //                 ->count();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'))
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'age')
        //                 ->groupBy('age')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'cities.city_name')
        //                 ->groupBy('city_name')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'cities.city_name')
        //                 ->groupBy('city_name')
        //                 ->orderBy('student_count', 'DESC')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'cities.city_name')
        //                 ->groupBy('city_name')
        //                 ->orderBy('student_count', 'DESC')
        //                 ->having('cities.city_name','=','City1')
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'cities.city_name')
        //                 ->groupBy('city_name')
        //                 ->orderBy('student_count', 'DESC')
        //                 ->having('student_count','>',1)
        //                 ->get();

        // $students = DB::table('students')
        //                 ->join('cities','students.city','=','cities.id')
        //                 ->select(DB::raw('count(*) as student_count'),'cities.city_name')
        //                 ->groupBy('city_name')
        //                 ->orderBy('student_count', 'DESC')
        //                 ->havingBetween('student_count',[1,3])
        //                 ->get();
------------------------------------left joins------------------------------------------
$students = DB::table('students')
                            ->leftJoin('cities','students.city','=','cities.id')
                            ->get();

-------------------------------------right joins--------------------------------------------
$students = DB::table('students')
                    ->rightJoin('cities','students.city','=','cities.id')
                    ->get();

---------------------------------------cross join ------------------------------------------=
$students = DB::table('students')
                            ->crossJoin('cities')->get();

-----------------------------------------Advanced Join Clauses--------------------------------
----------------on method
$students = DB::table('students')
                            ->leftJoin('cities',function(JoinClause $join){
                                $join->on('students.city','=','cities.id')
                                    ->where('cities.city_name','=','City1');
                            })
                            ->select('students.*','cities.city_name')
                            ->get();

-------------------------------------query builder - union method-------------------
$lecturers = DB::table('lecturers')
                ->select('name','email','city_name')
                ->join('cities','lecturers.city','=','cities.id');
$students = DB::table('students')
                ->union($lecturers)
                ->select('name','email','city_name')
                ->join('cities','students.city','=','cities.id')
                ->get();

----- we have method toSql for check - ki konse query chal rahi hai 
$lecturers = DB::table('lecturers')
                ->select('name','email','city_name')
                ->join('cities','lecturers.city','=','cities.id');
$students = DB::table('students')
                ->union($lecturers)
                ->select('name','email','city_name')
                ->join('cities','students.city','=','cities.id')
                ->toSql();

------ ab hum where iski sath use kare ge, lecturers wo search karege jo city1 se hai aur students wo search karege jo city2 se hai
$lecturers = DB::table('lecturers')
                ->select('name','email','city_name')
                ->join('cities','lecturers.city','=','cities.id')
                ->where('city_name','=','City1');
$students = DB::table('students')
                ->union($lecturers)
                ->select('name','email','city_name')
                ->join('cities','students.city','=','cities.id')
                ->where('city_name','=','City2')
                ->get();

----------------------------------query builder when method -----------------------------
$students = DB::table('students')
                ->when(true, function($query){
                $query->where('age','>',20);
                })
                ->get(); ->fetch students whose age greater than 20.
when method work like if, when true then where condition run it means if condition runs,
when false it skip where condition part

 $students = DB::table('students')
                ->when(false, function($query){
                $query->where('age','>',20);
                })
                ->get(); ->fetch all students data.

agr if false hn jate hai to humare pass else ka code run hnne ka bhe option hai like this
 $students = DB::table('students')
                ->when(false, function($query){
                $query->where('age','>',20);
                }, function($query){
                $query->where('age','<',20);
                })
                ->get();

agr when true hai to wo students ki record fetch karki lai ga jitne age 20 se zyada, agr when false hai to
wo record leke ai ga jitne age 20 se kam hai like else.

$flag = true;
$students = DB::table('students')
                ->when($flag, function($query){
                $query->where('age','>',20);
                }, function($query){
                $query->where('age','<',20);
                })
                ->get();

-------------------------------------query builder chunk method ------------------
$students = DB::table('students')->orderBy('id')
                        ->chunk(3,function($students){
                            echo "<div style='border: 1px solid red; margin-bottom: 15px;'>";
                            foreach($students as $student){
                                echo $student->name."<br>";
                            }
                            echo "</div>";
                        });
chunk method is used when we have lots of data we want to fetch or update it also, for updation we can use chunkById method
$students = DB::table('students')->orderBy('id')
                        ->chunkById(3,function($students){
                            foreach($students as $student){
                                DB::table('students')
                                        ->where('id',$student->id)
                                        ->update(['status'=>true]);
                            }
                        });







